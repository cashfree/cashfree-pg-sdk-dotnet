/*
 * Cashfree Payment Gateway APIs
 *
 * Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.
 *
 * The version of the OpenAPI document: 2023-08-01
 * Contact: developers@cashfree.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = cashfree_pg.Client.OpenAPIDateConverter;

namespace cashfree_pg.Model
{
    /// <summary>
    /// the data object pay api
    /// </summary>
    [DataContract(Name = "OrderPayData")]
    public class OrderPayData : IEquatable<OrderPayData>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderPayData" /> class.
        /// </summary>
        /// <param name="url">url.</param>
        /// <param name="payload">payload.</param>
        /// <param name="contentType">contentType.</param>
        /// <param name="method">method.</param>
        public OrderPayData(string? url = default(string?), Object? payload = default(Object?), string? contentType = default(string?), string? method = default(string?))
        {
            this.url = url;
            this.payload = payload;
            this.content_type = contentType;
            this.method = method;
        }

        /// <summary>
        /// Gets or Sets url
        /// </summary>
        [DataMember(Name = "url", EmitDefaultValue = false)]
        public string? url { get; set; }

        /// <summary>
        /// Gets or Sets payload
        /// </summary>
        [DataMember(Name = "payload", EmitDefaultValue = false)]
        public Object? payload { get; set; }

        /// <summary>
        /// Gets or Sets content_type
        /// </summary>
        [DataMember(Name = "content_type", EmitDefaultValue = false)]
        public string? content_type { get; set; }

        /// <summary>
        /// Gets or Sets method
        /// </summary>
        [DataMember(Name = "method", EmitDefaultValue = false)]
        public string? method { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderPayData {\n");
            sb.Append("  url: ").Append(url).Append("\n");
            sb.Append("  payload: ").Append(payload).Append("\n");
            sb.Append("  content_type: ").Append(content_type).Append("\n");
            sb.Append("  method: ").Append(method).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OrderPayData);
        }

        /// <summary>
        /// Returns true if OrderPayData instances are equal
        /// </summary>
        /// <param name="input">Instance of OrderPayData to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OrderPayData input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.url == input.url ||
                    (this.url != null &&
                    this.url.Equals(input.url))
                ) && 
                (
                    this.payload == input.payload ||
                    (this.payload != null &&
                    this.payload.Equals(input.payload))
                ) && 
                (
                    this.content_type == input.content_type ||
                    (this.content_type != null &&
                    this.content_type.Equals(input.content_type))
                ) && 
                (
                    this.method == input.method ||
                    (this.method != null &&
                    this.method.Equals(input.method))
                );
        }

        public static Boolean checkPresenceOfKey(string jsonStringurl) {
            dynamic deserializedJsonString = JsonConvert.DeserializeObject<dynamic>(jsonStringurl);
            if (deserializedJsonString.ContainsKey("url")) {
                return true;
            }
            return false;
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.url != null)
                {
                    hashCode = (hashCode * 59) + this.url.GetHashCode();
                }
                if (this.payload != null)
                {
                    hashCode = (hashCode * 59) + this.payload.GetHashCode();
                }
                if (this.content_type != null)
                {
                    hashCode = (hashCode * 59) + this.content_type.GetHashCode();
                }
                if (this.method != null)
                {
                    hashCode = (hashCode * 59) + this.method.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
