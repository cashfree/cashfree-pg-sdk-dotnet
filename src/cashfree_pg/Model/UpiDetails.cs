/*
 * Cashfree Payment Gateway APIs
 *
 * Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.
 *
 * The version of the OpenAPI document: 2023-08-01
 * Contact: developers@cashfree.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = cashfree_pg.Client.OpenAPIDateConverter;

namespace cashfree_pg.Model
{
    /// <summary>
    /// UpiDetails
    /// </summary>
    [DataContract(Name = "UpiDetails")]
    public class UpiDetails : IEquatable<UpiDetails>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UpiDetails" /> class.
        /// </summary>
        /// <param name="vpa">vpa.</param>
        /// <param name="accountHolder">accountHolder.</param>
        public UpiDetails(string? vpa = default(string?), string? accountHolder = default(string?))
        {
            this.vpa = vpa;
            this.account_holder = accountHolder;
        }

        /// <summary>
        /// Gets or Sets vpa
        /// </summary>
        [DataMember(Name = "vpa", EmitDefaultValue = false)]
        public string? vpa { get; set; }

        /// <summary>
        /// Gets or Sets account_holder
        /// </summary>
        [DataMember(Name = "account_holder", EmitDefaultValue = false)]
        public string? account_holder { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UpiDetails {\n");
            sb.Append("  vpa: ").Append(vpa).Append("\n");
            sb.Append("  account_holder: ").Append(account_holder).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UpiDetails);
        }

        /// <summary>
        /// Returns true if UpiDetails instances are equal
        /// </summary>
        /// <param name="input">Instance of UpiDetails to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UpiDetails input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.vpa == input.vpa ||
                    (this.vpa != null &&
                    this.vpa.Equals(input.vpa))
                ) && 
                (
                    this.account_holder == input.account_holder ||
                    (this.account_holder != null &&
                    this.account_holder.Equals(input.account_holder))
                );
        }

        public static Boolean checkPresenceOfKey(string jsonStringvpa) {
            dynamic deserializedJsonString = JsonConvert.DeserializeObject<dynamic>(jsonStringvpa);
            if (deserializedJsonString.ContainsKey("vpa")) {
                return true;
            }
            return false;
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.vpa != null)
                {
                    hashCode = (hashCode * 59) + this.vpa.GetHashCode();
                }
                if (this.account_holder != null)
                {
                    hashCode = (hashCode * 59) + this.account_holder.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
