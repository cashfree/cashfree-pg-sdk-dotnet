/*
 * Cashfree Payment Gateway APIs
 *
 * Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.
 *
 * The version of the OpenAPI document: 2025-01-01
 * Contact: developers@cashfree.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = cashfree_pg.Client.OpenAPIDateConverter;

namespace cashfree_pg.Model
{
    /// <summary>
    /// Adjust Vendor Balance Response
    /// </summary>
    [DataContract(Name = "AdjustVendorBalanceResponse")]
    public class AdjustVendorBalanceResponse : IEquatable<AdjustVendorBalanceResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AdjustVendorBalanceResponse" /> class.
        /// </summary>
        /// <param name="settlementId">settlementId.</param>
        /// <param name="transferDetails">transferDetails.</param>
        /// <param name="balances">balances.</param>
        /// <param name="charges">charges.</param>
        public AdjustVendorBalanceResponse(decimal? settlementId = default(decimal?), TransferDetails? transferDetails = default(TransferDetails?), BalanceDetails? balances = default(BalanceDetails?), ChargesDetails? charges = default(ChargesDetails?))
        {
            this.settlement_id = settlementId;
            this.transfer_details = transferDetails;
            this.balances = balances;
            this.charges = charges;
        }

        /// <summary>
        /// Gets or Sets settlement_id
        /// </summary>
        [DataMember(Name = "settlement_id", EmitDefaultValue = false)]
        public decimal? settlement_id { get; set; }

        /// <summary>
        /// Gets or Sets transfer_details
        /// </summary>
        [DataMember(Name = "transfer_details", EmitDefaultValue = false)]
        public TransferDetails? transfer_details { get; set; }

        /// <summary>
        /// Gets or Sets balances
        /// </summary>
        [DataMember(Name = "balances", EmitDefaultValue = false)]
        public BalanceDetails? balances { get; set; }

        /// <summary>
        /// Gets or Sets charges
        /// </summary>
        [DataMember(Name = "charges", EmitDefaultValue = false)]
        public ChargesDetails? charges { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AdjustVendorBalanceResponse {\n");
            sb.Append("  settlement_id: ").Append(settlement_id).Append("\n");
            sb.Append("  transfer_details: ").Append(transfer_details).Append("\n");
            sb.Append("  balances: ").Append(balances).Append("\n");
            sb.Append("  charges: ").Append(charges).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AdjustVendorBalanceResponse);
        }

        /// <summary>
        /// Returns true if AdjustVendorBalanceResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of AdjustVendorBalanceResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AdjustVendorBalanceResponse input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.settlement_id == input.settlement_id ||
                    this.settlement_id.Equals(input.settlement_id)
                ) && 
                (
                    this.transfer_details == input.transfer_details ||
                    (this.transfer_details != null &&
                    this.transfer_details.Equals(input.transfer_details))
                ) && 
                (
                    this.balances == input.balances ||
                    (this.balances != null &&
                    this.balances.Equals(input.balances))
                ) && 
                (
                    this.charges == input.charges ||
                    (this.charges != null &&
                    this.charges.Equals(input.charges))
                );
        }

        public static Boolean checkPresenceOfKey(string jsonStringsettlement_id) {
            dynamic deserializedJsonString = JsonConvert.DeserializeObject<dynamic>(jsonStringsettlement_id);
            if (deserializedJsonString.ContainsKey("settlement_id")) {
                return true;
            }
            return false;
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.settlement_id.GetHashCode();
                if (this.transfer_details != null)
                {
                    hashCode = (hashCode * 59) + this.transfer_details.GetHashCode();
                }
                if (this.balances != null)
                {
                    hashCode = (hashCode * 59) + this.balances.GetHashCode();
                }
                if (this.charges != null)
                {
                    hashCode = (hashCode * 59) + this.charges.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
