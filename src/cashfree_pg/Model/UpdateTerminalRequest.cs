/*
 * Cashfree Payment Gateway APIs
 *
 * Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.
 *
 * The version of the OpenAPI document: 2023-08-01
 * Contact: developers@cashfree.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = cashfree_pg.Client.OpenAPIDateConverter;

namespace cashfree_pg.Model
{
    /// <summary>
    /// Request body to update terminal details.
    /// </summary>
    [DataContract(Name = "UpdateTerminalRequest")]
    public class UpdateTerminalRequest : IEquatable<UpdateTerminalRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateTerminalRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected UpdateTerminalRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateTerminalRequest" /> class.
        /// </summary>
        /// <param name="terminalEmail">Mention the updated email ID of the terminal..</param>
        /// <param name="terminalPhoneNo">Terminal phone number to be updated..</param>
        /// <param name="terminalMeta">terminalMeta.</param>
        /// <param name="terminalType">Mention the terminal type to be updated. Possible values - AGENT, STOREFRONT. (required).</param>
        public UpdateTerminalRequest(string terminalEmail = default(string), string terminalPhoneNo = default(string), UpdateTerminalRequestTerminalMeta terminalMeta = default(UpdateTerminalRequestTerminalMeta), string terminalType = default(string))
        {
            // to ensure "terminalType" is required (not null)
            if (terminalType == null)
            {
                throw new ArgumentNullException("terminalType is a required property for UpdateTerminalRequest and cannot be null");
            }
            this.terminal_type = terminalType;
            this.terminal_email = terminalEmail;
            this.terminal_phone_no = terminalPhoneNo;
            this.terminal_meta = terminalMeta;
        }

        /// <summary>
        /// Mention the updated email ID of the terminal.
        /// </summary>
        /// <value>Mention the updated email ID of the terminal.</value>
        [DataMember(Name = "terminal_email", EmitDefaultValue = false)]
        public string terminal_email { get; set; }

        /// <summary>
        /// Terminal phone number to be updated.
        /// </summary>
        /// <value>Terminal phone number to be updated.</value>
        [DataMember(Name = "terminal_phone_no", EmitDefaultValue = false)]
        public string terminal_phone_no { get; set; }

        /// <summary>
        /// Gets or Sets terminal_meta
        /// </summary>
        [DataMember(Name = "terminal_meta", EmitDefaultValue = false)]
        public UpdateTerminalRequestTerminalMeta terminal_meta { get; set; }

        /// <summary>
        /// Mention the terminal type to be updated. Possible values - AGENT, STOREFRONT.
        /// </summary>
        /// <value>Mention the terminal type to be updated. Possible values - AGENT, STOREFRONT.</value>
        [DataMember(Name = "terminal_type", IsRequired = true, EmitDefaultValue = true)]
        public string terminal_type { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UpdateTerminalRequest {\n");
            sb.Append("  terminal_email: ").Append(terminal_email).Append("\n");
            sb.Append("  terminal_phone_no: ").Append(terminal_phone_no).Append("\n");
            sb.Append("  terminal_meta: ").Append(terminal_meta).Append("\n");
            sb.Append("  terminal_type: ").Append(terminal_type).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UpdateTerminalRequest);
        }

        /// <summary>
        /// Returns true if UpdateTerminalRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of UpdateTerminalRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UpdateTerminalRequest input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.terminal_email == input.terminal_email ||
                    (this.terminal_email != null &&
                    this.terminal_email.Equals(input.terminal_email))
                ) && 
                (
                    this.terminal_phone_no == input.terminal_phone_no ||
                    (this.terminal_phone_no != null &&
                    this.terminal_phone_no.Equals(input.terminal_phone_no))
                ) && 
                (
                    this.terminal_meta == input.terminal_meta ||
                    (this.terminal_meta != null &&
                    this.terminal_meta.Equals(input.terminal_meta))
                ) && 
                (
                    this.terminal_type == input.terminal_type ||
                    (this.terminal_type != null &&
                    this.terminal_type.Equals(input.terminal_type))
                );
        }

        public static Boolean checkPresenceOfKey(string jsonStringterminal_email) {
            dynamic deserializedJsonString = JsonConvert.DeserializeObject<dynamic>(jsonStringterminal_email);
            if (deserializedJsonString.ContainsKey("terminal_email")) {
                return true;
            }
            return false;
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.terminal_email != null)
                {
                    hashCode = (hashCode * 59) + this.terminal_email.GetHashCode();
                }
                if (this.terminal_phone_no != null)
                {
                    hashCode = (hashCode * 59) + this.terminal_phone_no.GetHashCode();
                }
                if (this.terminal_meta != null)
                {
                    hashCode = (hashCode * 59) + this.terminal_meta.GetHashCode();
                }
                if (this.terminal_type != null)
                {
                    hashCode = (hashCode * 59) + this.terminal_type.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // terminal_phone_no (string) maxLength
            if (this.terminal_phone_no != null && this.terminal_phone_no.Length > 10)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for terminal_phone_no, length must be less than 10.", new [] { "terminal_phone_no" });
            }

            // terminal_phone_no (string) minLength
            if (this.terminal_phone_no != null && this.terminal_phone_no.Length < 10)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for terminal_phone_no, length must be greater than 10.", new [] { "terminal_phone_no" });
            }

            yield break;
        }
    }

}
