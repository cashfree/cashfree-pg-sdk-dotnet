/*
 * Cashfree Payment Gateway APIs
 *
 * Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.
 *
 * The version of the OpenAPI document: 2023-08-01
 * Contact: developers@cashfree.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = cashfree_pg.Client.OpenAPIDateConverter;

namespace cashfree_pg.Model
{
    /// <summary>
    /// soundbox response object
    /// </summary>
    [DataContract(Name = "SoundboxVpaEntity")]
    public class SoundboxVpaEntity : IEquatable<SoundboxVpaEntity>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SoundboxVpaEntity" /> class.
        /// </summary>
        /// <param name="vpa">vpa.</param>
        /// <param name="cfTerminalId">cfTerminalId.</param>
        /// <param name="deviceSerialNo">deviceSerialNo.</param>
        /// <param name="merchantName">merchantName.</param>
        /// <param name="language">language.</param>
        public SoundboxVpaEntity(string? vpa = default(string?), string? cfTerminalId = default(string?), string? deviceSerialNo = default(string?), string? merchantName = default(string?), string? language = default(string?))
        {
            this.vpa = vpa;
            this.cf_terminal_id = cfTerminalId;
            this.device_serial_no = deviceSerialNo;
            this.merchant_name = merchantName;
            this.language = language;
        }

        /// <summary>
        /// Gets or Sets vpa
        /// </summary>
        [DataMember(Name = "vpa", EmitDefaultValue = false)]
        public string? vpa { get; set; }

        /// <summary>
        /// Gets or Sets cf_terminal_id
        /// </summary>
        [DataMember(Name = "cf_terminal_id", EmitDefaultValue = false)]
        public string? cf_terminal_id { get; set; }

        /// <summary>
        /// Gets or Sets device_serial_no
        /// </summary>
        [DataMember(Name = "device_serial_no", EmitDefaultValue = false)]
        public string? device_serial_no { get; set; }

        /// <summary>
        /// Gets or Sets merchant_name
        /// </summary>
        [DataMember(Name = "merchant_name", EmitDefaultValue = false)]
        public string? merchant_name { get; set; }

        /// <summary>
        /// Gets or Sets language
        /// </summary>
        [DataMember(Name = "language", EmitDefaultValue = false)]
        public string? language { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SoundboxVpaEntity {\n");
            sb.Append("  vpa: ").Append(vpa).Append("\n");
            sb.Append("  cf_terminal_id: ").Append(cf_terminal_id).Append("\n");
            sb.Append("  device_serial_no: ").Append(device_serial_no).Append("\n");
            sb.Append("  merchant_name: ").Append(merchant_name).Append("\n");
            sb.Append("  language: ").Append(language).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SoundboxVpaEntity);
        }

        /// <summary>
        /// Returns true if SoundboxVpaEntity instances are equal
        /// </summary>
        /// <param name="input">Instance of SoundboxVpaEntity to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SoundboxVpaEntity input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.vpa == input.vpa ||
                    (this.vpa != null &&
                    this.vpa.Equals(input.vpa))
                ) && 
                (
                    this.cf_terminal_id == input.cf_terminal_id ||
                    (this.cf_terminal_id != null &&
                    this.cf_terminal_id.Equals(input.cf_terminal_id))
                ) && 
                (
                    this.device_serial_no == input.device_serial_no ||
                    (this.device_serial_no != null &&
                    this.device_serial_no.Equals(input.device_serial_no))
                ) && 
                (
                    this.merchant_name == input.merchant_name ||
                    (this.merchant_name != null &&
                    this.merchant_name.Equals(input.merchant_name))
                ) && 
                (
                    this.language == input.language ||
                    (this.language != null &&
                    this.language.Equals(input.language))
                );
        }

        public static Boolean checkPresenceOfKey(string jsonStringvpa) {
            dynamic deserializedJsonString = JsonConvert.DeserializeObject<dynamic>(jsonStringvpa);
            if (deserializedJsonString.ContainsKey("vpa")) {
                return true;
            }
            return false;
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.vpa != null)
                {
                    hashCode = (hashCode * 59) + this.vpa.GetHashCode();
                }
                if (this.cf_terminal_id != null)
                {
                    hashCode = (hashCode * 59) + this.cf_terminal_id.GetHashCode();
                }
                if (this.device_serial_no != null)
                {
                    hashCode = (hashCode * 59) + this.device_serial_no.GetHashCode();
                }
                if (this.merchant_name != null)
                {
                    hashCode = (hashCode * 59) + this.merchant_name.GetHashCode();
                }
                if (this.language != null)
                {
                    hashCode = (hashCode * 59) + this.language.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
