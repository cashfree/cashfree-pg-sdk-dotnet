/*
 * New Payment Gateway APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2022-01-01
 * Contact: nextgenapi@cashfree.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = cashfreepg.Client.OpenAPIDateConverter;

namespace cashfreepg.Model
{
    /// <summary>
    /// CFLinkCustomerDetailsEntity
    /// </summary>
    [DataContract(Name = "CFLinkCustomerDetailsEntity")]
    public partial class CFLinkCustomerDetailsEntity : IEquatable<CFLinkCustomerDetailsEntity>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CFLinkCustomerDetailsEntity" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CFLinkCustomerDetailsEntity() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CFLinkCustomerDetailsEntity" /> class.
        /// </summary>
        /// <param name="customerPhone">Customer phone number (required).</param>
        /// <param name="customerEmail">Customer email address.</param>
        /// <param name="customerName">Customer name.</param>
        public CFLinkCustomerDetailsEntity(string? customerPhone = default(string?), string? customerEmail = default(string?), string? customerName = default(string?))
        {
            // to ensure "customerPhone" is required (not null)
            if (customerPhone == null) {
                throw new ArgumentNullException("customerPhone is a required property for CFLinkCustomerDetailsEntity and cannot be null");
            }
            this.CustomerPhone = customerPhone;
            this.CustomerEmail = customerEmail;
            this.CustomerName = customerName;
        }

        /// <summary>
        /// Customer phone number
        /// </summary>
        /// <value>Customer phone number</value>
        [DataMember(Name = "customer_phone", IsRequired = true, EmitDefaultValue = false)]
        public string? CustomerPhone { get; set; }

        /// <summary>
        /// Customer email address
        /// </summary>
        /// <value>Customer email address</value>
        [DataMember(Name = "customer_email", EmitDefaultValue = false)]
        public string? CustomerEmail { get; set; }

        /// <summary>
        /// Customer name
        /// </summary>
        /// <value>Customer name</value>
        [DataMember(Name = "customer_name", EmitDefaultValue = false)]
        public string? CustomerName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CFLinkCustomerDetailsEntity {\n");
            sb.Append("  CustomerPhone: ").Append(CustomerPhone).Append("\n");
            sb.Append("  CustomerEmail: ").Append(CustomerEmail).Append("\n");
            sb.Append("  CustomerName: ").Append(CustomerName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object? input)
        {
            return this.Equals(input as CFLinkCustomerDetailsEntity);
        }

        /// <summary>
        /// Returns true if CFLinkCustomerDetailsEntity instances are equal
        /// </summary>
        /// <param name="input">Instance of CFLinkCustomerDetailsEntity to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CFLinkCustomerDetailsEntity? input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.CustomerPhone == input.CustomerPhone ||
                    (this.CustomerPhone != null &&
                    this.CustomerPhone.Equals(input.CustomerPhone))
                ) && 
                (
                    this.CustomerEmail == input.CustomerEmail ||
                    (this.CustomerEmail != null &&
                    this.CustomerEmail.Equals(input.CustomerEmail))
                ) && 
                (
                    this.CustomerName == input.CustomerName ||
                    (this.CustomerName != null &&
                    this.CustomerName.Equals(input.CustomerName))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CustomerPhone != null)
                {
                    hashCode = (hashCode * 59) + this.CustomerPhone.GetHashCode();
                }
                if (this.CustomerEmail != null)
                {
                    hashCode = (hashCode * 59) + this.CustomerEmail.GetHashCode();
                }
                if (this.CustomerName != null)
                {
                    hashCode = (hashCode * 59) + this.CustomerName.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
