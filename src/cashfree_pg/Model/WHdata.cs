/*
 * Cashfree Payment Gateway APIs
 *
 * Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.
 *
 * The version of the OpenAPI document: 2022-09-01
 * Contact: developers@cashfree.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = cashfree_pg.Client.OpenAPIDateConverter;

namespace cashfree_pg.Model
{
    /// <summary>
    /// webhook object
    /// </summary>
    [DataContract(Name = "WHdata")]
    public class WHdata : IEquatable<WHdata>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WHdata" /> class.
        /// </summary>
        /// <param name="order">order.</param>
        /// <param name="payment">payment.</param>
        /// <param name="customerDetails">customerDetails.</param>
        public WHdata(WHorder order = default(WHorder), PaymentEntity payment = default(PaymentEntity), WHcustomerDetails customerDetails = default(WHcustomerDetails))
        {
            this.order = order;
            this.payment = payment;
            this.customer_details = customerDetails;
        }

        /// <summary>
        /// Gets or Sets order
        /// </summary>
        [DataMember(Name = "order", EmitDefaultValue = false)]
        public WHorder order { get; set; }

        /// <summary>
        /// Gets or Sets payment
        /// </summary>
        [DataMember(Name = "payment", EmitDefaultValue = false)]
        public PaymentEntity payment { get; set; }

        /// <summary>
        /// Gets or Sets customer_details
        /// </summary>
        [DataMember(Name = "customer_details", EmitDefaultValue = false)]
        public WHcustomerDetails customer_details { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class WHdata {\n");
            sb.Append("  order: ").Append(order).Append("\n");
            sb.Append("  payment: ").Append(payment).Append("\n");
            sb.Append("  customer_details: ").Append(customer_details).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WHdata);
        }

        /// <summary>
        /// Returns true if WHdata instances are equal
        /// </summary>
        /// <param name="input">Instance of WHdata to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WHdata input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.order == input.order ||
                    (this.order != null &&
                    this.order.Equals(input.order))
                ) && 
                (
                    this.payment == input.payment ||
                    (this.payment != null &&
                    this.payment.Equals(input.payment))
                ) && 
                (
                    this.customer_details == input.customer_details ||
                    (this.customer_details != null &&
                    this.customer_details.Equals(input.customer_details))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.order != null)
                {
                    hashCode = (hashCode * 59) + this.order.GetHashCode();
                }
                if (this.payment != null)
                {
                    hashCode = (hashCode * 59) + this.payment.GetHashCode();
                }
                if (this.customer_details != null)
                {
                    hashCode = (hashCode * 59) + this.customer_details.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
