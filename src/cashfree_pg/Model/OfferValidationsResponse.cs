/*
 * Cashfree Payment Gateway APIs
 *
 * Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.
 *
 * The version of the OpenAPI document: 2025-01-01
 * Contact: developers@cashfree.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = cashfree_pg.Client.OpenAPIDateConverter;

namespace cashfree_pg.Model
{
    /// <summary>
    /// Offer validation object
    /// </summary>
    [DataContract(Name = "OfferValidationsResponse")]
    public class OfferValidationsResponse : IEquatable<OfferValidationsResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OfferValidationsResponse" /> class.
        /// </summary>
        /// <param name="maxAllowed">Maximum Amount for Offer to be Applicable.</param>
        /// <param name="minAmount">Minimum Amount for Offer to be Applicable.</param>
        /// <param name="paymentMethod">paymentMethod.</param>
        public OfferValidationsResponse(decimal? maxAllowed = default(decimal?), decimal? minAmount = default(decimal?), OfferValidationsResponsePaymentMethod? paymentMethod = default(OfferValidationsResponsePaymentMethod?))
        {
            this.max_allowed = maxAllowed;
            this.min_amount = minAmount;
            this.payment_method = paymentMethod;
        }

        /// <summary>
        /// Maximum Amount for Offer to be Applicable
        /// </summary>
        /// <value>Maximum Amount for Offer to be Applicable</value>
        /// <example>1</example>
        [DataMember(Name = "max_allowed", EmitDefaultValue = false)]
        public decimal? max_allowed { get; set; }

        /// <summary>
        /// Minimum Amount for Offer to be Applicable
        /// </summary>
        /// <value>Minimum Amount for Offer to be Applicable</value>
        /// <example>1</example>
        [DataMember(Name = "min_amount", EmitDefaultValue = false)]
        public decimal? min_amount { get; set; }

        /// <summary>
        /// Gets or Sets payment_method
        /// </summary>
        [DataMember(Name = "payment_method", EmitDefaultValue = false)]
        public OfferValidationsResponsePaymentMethod? payment_method { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OfferValidationsResponse {\n");
            sb.Append("  max_allowed: ").Append(max_allowed).Append("\n");
            sb.Append("  min_amount: ").Append(min_amount).Append("\n");
            sb.Append("  payment_method: ").Append(payment_method).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OfferValidationsResponse);
        }

        /// <summary>
        /// Returns true if OfferValidationsResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of OfferValidationsResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OfferValidationsResponse input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.max_allowed == input.max_allowed ||
                    this.max_allowed.Equals(input.max_allowed)
                ) && 
                (
                    this.min_amount == input.min_amount ||
                    this.min_amount.Equals(input.min_amount)
                ) && 
                (
                    this.payment_method == input.payment_method ||
                    (this.payment_method != null &&
                    this.payment_method.Equals(input.payment_method))
                );
        }

        public static Boolean checkPresenceOfKey(string jsonStringmax_allowed) {
            dynamic deserializedJsonString = JsonConvert.DeserializeObject<dynamic>(jsonStringmax_allowed);
            if (deserializedJsonString.ContainsKey("max_allowed")) {
                return true;
            }
            return false;
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.max_allowed.GetHashCode();
                hashCode = (hashCode * 59) + this.min_amount.GetHashCode();
                if (this.payment_method != null)
                {
                    hashCode = (hashCode * 59) + this.payment_method.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // max_allowed (decimal) minimum
            if (this.max_allowed < (decimal)1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for max_allowed, must be a value greater than or equal to 1.", new [] { "max_allowed" });
            }

            // min_amount (decimal) minimum
            if (this.min_amount < (decimal)1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for min_amount, must be a value greater than or equal to 1.", new [] { "min_amount" });
            }

            yield break;
        }
    }

}
