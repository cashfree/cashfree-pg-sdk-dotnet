/*
 * Cashfree Payment Gateway APIs
 *
 * Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.
 *
 * The version of the OpenAPI document: 2025-01-01
 * Contact: developers@cashfree.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = cashfree_pg.Client.OpenAPIDateConverter;

namespace cashfree_pg.Model
{
    /// <summary>
    /// ESOrderReconResponseDataInnerOrderSplitsInnerSplitInner
    /// </summary>
    [DataContract(Name = "ESOrderReconResponse_data_inner_order_splits_inner_split_inner")]
    public class ESOrderReconResponseDataInnerOrderSplitsInnerSplitInner : IEquatable<ESOrderReconResponseDataInnerOrderSplitsInnerSplitInner>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ESOrderReconResponseDataInnerOrderSplitsInnerSplitInner" /> class.
        /// </summary>
        /// <param name="merchantVendorId">merchantVendorId.</param>
        /// <param name="percentage">percentage.</param>
        /// <param name="tags">tags.</param>
        public ESOrderReconResponseDataInnerOrderSplitsInnerSplitInner(string? merchantVendorId = default(string?), decimal? percentage = default(decimal?), Object? tags = default(Object?))
        {
            this.merchant_vendor_id = merchantVendorId;
            this.percentage = percentage;
            this.tags = tags;
        }

        /// <summary>
        /// Gets or Sets merchant_vendor_id
        /// </summary>
        [DataMember(Name = "merchant_vendor_id", EmitDefaultValue = false)]
        public string? merchant_vendor_id { get; set; }

        /// <summary>
        /// Gets or Sets percentage
        /// </summary>
        [DataMember(Name = "percentage", EmitDefaultValue = false)]
        public decimal? percentage { get; set; }

        /// <summary>
        /// Gets or Sets tags
        /// </summary>
        [DataMember(Name = "tags", EmitDefaultValue = false)]
        public Object? tags { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ESOrderReconResponseDataInnerOrderSplitsInnerSplitInner {\n");
            sb.Append("  merchant_vendor_id: ").Append(merchant_vendor_id).Append("\n");
            sb.Append("  percentage: ").Append(percentage).Append("\n");
            sb.Append("  tags: ").Append(tags).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ESOrderReconResponseDataInnerOrderSplitsInnerSplitInner);
        }

        /// <summary>
        /// Returns true if ESOrderReconResponseDataInnerOrderSplitsInnerSplitInner instances are equal
        /// </summary>
        /// <param name="input">Instance of ESOrderReconResponseDataInnerOrderSplitsInnerSplitInner to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ESOrderReconResponseDataInnerOrderSplitsInnerSplitInner input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.merchant_vendor_id == input.merchant_vendor_id ||
                    (this.merchant_vendor_id != null &&
                    this.merchant_vendor_id.Equals(input.merchant_vendor_id))
                ) && 
                (
                    this.percentage == input.percentage ||
                    this.percentage.Equals(input.percentage)
                ) && 
                (
                    this.tags == input.tags ||
                    (this.tags != null &&
                    this.tags.Equals(input.tags))
                );
        }

        public static Boolean checkPresenceOfKey(string jsonStringmerchant_vendor_id) {
            dynamic deserializedJsonString = JsonConvert.DeserializeObject<dynamic>(jsonStringmerchant_vendor_id);
            if (deserializedJsonString.ContainsKey("merchant_vendor_id")) {
                return true;
            }
            return false;
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.merchant_vendor_id != null)
                {
                    hashCode = (hashCode * 59) + this.merchant_vendor_id.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.percentage.GetHashCode();
                if (this.tags != null)
                {
                    hashCode = (hashCode * 59) + this.tags.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
