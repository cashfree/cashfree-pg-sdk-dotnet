/*
 * Cashfree Payment Gateway APIs
 *
 * Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.
 *
 * The version of the OpenAPI document: 2025-01-01
 * Contact: developers@cashfree.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = cashfree_pg.Client.OpenAPIDateConverter;

namespace cashfree_pg.Model
{
    /// <summary>
    /// Terminal Data in the create order response
    /// </summary>
    [DataContract(Name = "TerminalData")]
    public class TerminalData : IEquatable<TerminalData>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TerminalData" /> class.
        /// </summary>
        /// <param name="agentMobileNumber">agentMobileNumber.</param>
        /// <param name="cfTerminalId">cfTerminalId.</param>
        /// <param name="merchantTerminalId">merchantTerminalId.</param>
        /// <param name="terminalType">terminalType.</param>
        public TerminalData(string? agentMobileNumber = default(string?), int? cfTerminalId = default(int?), string? merchantTerminalId = default(string?), string? terminalType = default(string?))
        {
            this.agent_mobile_number = agentMobileNumber;
            this.cf_terminal_id = cfTerminalId;
            this.merchant_terminal_id = merchantTerminalId;
            this.terminal_type = terminalType;
        }

        /// <summary>
        /// Gets or Sets agent_mobile_number
        /// </summary>
        [DataMember(Name = "agent_mobile_number", EmitDefaultValue = false)]
        public string? agent_mobile_number { get; set; }

        /// <summary>
        /// Gets or Sets cf_terminal_id
        /// </summary>
        [DataMember(Name = "cf_terminal_id", EmitDefaultValue = false)]
        public int? cf_terminal_id { get; set; }

        /// <summary>
        /// Gets or Sets merchant_terminal_id
        /// </summary>
        [DataMember(Name = "merchant_terminal_id", EmitDefaultValue = false)]
        public string? merchant_terminal_id { get; set; }

        /// <summary>
        /// Gets or Sets terminal_type
        /// </summary>
        [DataMember(Name = "terminal_type", EmitDefaultValue = false)]
        public string? terminal_type { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TerminalData {\n");
            sb.Append("  agent_mobile_number: ").Append(agent_mobile_number).Append("\n");
            sb.Append("  cf_terminal_id: ").Append(cf_terminal_id).Append("\n");
            sb.Append("  merchant_terminal_id: ").Append(merchant_terminal_id).Append("\n");
            sb.Append("  terminal_type: ").Append(terminal_type).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TerminalData);
        }

        /// <summary>
        /// Returns true if TerminalData instances are equal
        /// </summary>
        /// <param name="input">Instance of TerminalData to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TerminalData input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.agent_mobile_number == input.agent_mobile_number ||
                    (this.agent_mobile_number != null &&
                    this.agent_mobile_number.Equals(input.agent_mobile_number))
                ) && 
                (
                    this.cf_terminal_id == input.cf_terminal_id ||
                    this.cf_terminal_id.Equals(input.cf_terminal_id)
                ) && 
                (
                    this.merchant_terminal_id == input.merchant_terminal_id ||
                    (this.merchant_terminal_id != null &&
                    this.merchant_terminal_id.Equals(input.merchant_terminal_id))
                ) && 
                (
                    this.terminal_type == input.terminal_type ||
                    (this.terminal_type != null &&
                    this.terminal_type.Equals(input.terminal_type))
                );
        }

        public static Boolean checkPresenceOfKey(string jsonStringagent_mobile_number) {
            dynamic deserializedJsonString = JsonConvert.DeserializeObject<dynamic>(jsonStringagent_mobile_number);
            if (deserializedJsonString.ContainsKey("agent_mobile_number")) {
                return true;
            }
            return false;
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.agent_mobile_number != null)
                {
                    hashCode = (hashCode * 59) + this.agent_mobile_number.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.cf_terminal_id.GetHashCode();
                if (this.merchant_terminal_id != null)
                {
                    hashCode = (hashCode * 59) + this.merchant_terminal_id.GetHashCode();
                }
                if (this.terminal_type != null)
                {
                    hashCode = (hashCode * 59) + this.terminal_type.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
