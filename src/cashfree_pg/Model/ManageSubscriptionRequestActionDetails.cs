/*
 * Cashfree Payment Gateway APIs
 *
 * Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.
 *
 * The version of the OpenAPI document: 2023-08-01
 * Contact: developers@cashfree.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = cashfree_pg.Client.OpenAPIDateConverter;

namespace cashfree_pg.Model
{
    /// <summary>
    /// Details of the action to be performed.
    /// </summary>
    [DataContract(Name = "ManageSubscriptionRequest_action_details")]
    public class ManageSubscriptionRequestActionDetails : IEquatable<ManageSubscriptionRequestActionDetails>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ManageSubscriptionRequestActionDetails" /> class.
        /// </summary>
        /// <param name="nextScheduledTime">Next scheduled time for the action. Required for ACTIVATE action..</param>
        /// <param name="planId">Plan ID to update. Required for CHANGE_PLAN action..</param>
        public ManageSubscriptionRequestActionDetails(string? nextScheduledTime = default(string?), string? planId = default(string?))
        {
            this.next_scheduled_time = nextScheduledTime;
            this.plan_id = planId;
        }

        /// <summary>
        /// Next scheduled time for the action. Required for ACTIVATE action.
        /// </summary>
        /// <value>Next scheduled time for the action. Required for ACTIVATE action.</value>
        [DataMember(Name = "next_scheduled_time", EmitDefaultValue = false)]
        public string? next_scheduled_time { get; set; }

        /// <summary>
        /// Plan ID to update. Required for CHANGE_PLAN action.
        /// </summary>
        /// <value>Plan ID to update. Required for CHANGE_PLAN action.</value>
        [DataMember(Name = "plan_id", EmitDefaultValue = false)]
        public string? plan_id { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ManageSubscriptionRequestActionDetails {\n");
            sb.Append("  next_scheduled_time: ").Append(next_scheduled_time).Append("\n");
            sb.Append("  plan_id: ").Append(plan_id).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ManageSubscriptionRequestActionDetails);
        }

        /// <summary>
        /// Returns true if ManageSubscriptionRequestActionDetails instances are equal
        /// </summary>
        /// <param name="input">Instance of ManageSubscriptionRequestActionDetails to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ManageSubscriptionRequestActionDetails input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.next_scheduled_time == input.next_scheduled_time ||
                    (this.next_scheduled_time != null &&
                    this.next_scheduled_time.Equals(input.next_scheduled_time))
                ) && 
                (
                    this.plan_id == input.plan_id ||
                    (this.plan_id != null &&
                    this.plan_id.Equals(input.plan_id))
                );
        }

        public static Boolean checkPresenceOfKey(string jsonStringnext_scheduled_time) {
            dynamic deserializedJsonString = JsonConvert.DeserializeObject<dynamic>(jsonStringnext_scheduled_time);
            if (deserializedJsonString.ContainsKey("next_scheduled_time")) {
                return true;
            }
            return false;
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.next_scheduled_time != null)
                {
                    hashCode = (hashCode * 59) + this.next_scheduled_time.GetHashCode();
                }
                if (this.plan_id != null)
                {
                    hashCode = (hashCode * 59) + this.plan_id.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
