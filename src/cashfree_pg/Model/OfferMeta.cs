/*
 * Cashfree Payment Gateway APIs
 *
 * Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.
 *
 * The version of the OpenAPI document: 2022-09-01
 * Contact: developers@cashfree.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = cashfree_pg.Client.OpenAPIDateConverter;

namespace cashfree_pg.Model
{
    /// <summary>
    /// Offer meta details object
    /// </summary>
    [DataContract(Name = "OfferMeta")]
    public class OfferMeta : IEquatable<OfferMeta>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OfferMeta" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected OfferMeta() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="OfferMeta" /> class.
        /// </summary>
        /// <param name="offerTitle">Title for the Offer. (required).</param>
        /// <param name="offerDescription">Description for the Offer. (required).</param>
        /// <param name="offerCode">Unique identifier for the Offer. (required).</param>
        /// <param name="offerStartTime">Start Time for the Offer (required).</param>
        /// <param name="offerEndTime">Expiry Time for the Offer (required).</param>
        public OfferMeta(string offerTitle = default(string), string offerDescription = default(string), string offerCode = default(string), string offerStartTime = default(string), string offerEndTime = default(string))
        {
            // to ensure "offerTitle" is required (not null)
            if (offerTitle == null)
            {
                throw new ArgumentNullException("offerTitle is a required property for OfferMeta and cannot be null");
            }
            this.offer_title = offerTitle;
            // to ensure "offerDescription" is required (not null)
            if (offerDescription == null)
            {
                throw new ArgumentNullException("offerDescription is a required property for OfferMeta and cannot be null");
            }
            this.offer_description = offerDescription;
            // to ensure "offerCode" is required (not null)
            if (offerCode == null)
            {
                throw new ArgumentNullException("offerCode is a required property for OfferMeta and cannot be null");
            }
            this.offer_code = offerCode;
            // to ensure "offerStartTime" is required (not null)
            if (offerStartTime == null)
            {
                throw new ArgumentNullException("offerStartTime is a required property for OfferMeta and cannot be null");
            }
            this.offer_start_time = offerStartTime;
            // to ensure "offerEndTime" is required (not null)
            if (offerEndTime == null)
            {
                throw new ArgumentNullException("offerEndTime is a required property for OfferMeta and cannot be null");
            }
            this.offer_end_time = offerEndTime;
        }

        /// <summary>
        /// Title for the Offer.
        /// </summary>
        /// <value>Title for the Offer.</value>
        /// <example>Test Offer</example>
        [DataMember(Name = "offer_title", IsRequired = true, EmitDefaultValue = true)]
        public string offer_title { get; set; }

        /// <summary>
        /// Description for the Offer.
        /// </summary>
        /// <value>Description for the Offer.</value>
        /// <example>Lorem ipsum dolor sit amet, consectetur adipiscing elit</example>
        [DataMember(Name = "offer_description", IsRequired = true, EmitDefaultValue = true)]
        public string offer_description { get; set; }

        /// <summary>
        /// Unique identifier for the Offer.
        /// </summary>
        /// <value>Unique identifier for the Offer.</value>
        /// <example>CFTESTOFFER</example>
        [DataMember(Name = "offer_code", IsRequired = true, EmitDefaultValue = true)]
        public string offer_code { get; set; }

        /// <summary>
        /// Start Time for the Offer
        /// </summary>
        /// <value>Start Time for the Offer</value>
        /// <example>2023-03-21T08:09:51Z</example>
        [DataMember(Name = "offer_start_time", IsRequired = true, EmitDefaultValue = true)]
        public string offer_start_time { get; set; }

        /// <summary>
        /// Expiry Time for the Offer
        /// </summary>
        /// <value>Expiry Time for the Offer</value>
        /// <example>2023-03-29T08:09:51Z</example>
        [DataMember(Name = "offer_end_time", IsRequired = true, EmitDefaultValue = true)]
        public string offer_end_time { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OfferMeta {\n");
            sb.Append("  offer_title: ").Append(offer_title).Append("\n");
            sb.Append("  offer_description: ").Append(offer_description).Append("\n");
            sb.Append("  offer_code: ").Append(offer_code).Append("\n");
            sb.Append("  offer_start_time: ").Append(offer_start_time).Append("\n");
            sb.Append("  offer_end_time: ").Append(offer_end_time).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OfferMeta);
        }

        /// <summary>
        /// Returns true if OfferMeta instances are equal
        /// </summary>
        /// <param name="input">Instance of OfferMeta to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OfferMeta input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.offer_title == input.offer_title ||
                    (this.offer_title != null &&
                    this.offer_title.Equals(input.offer_title))
                ) && 
                (
                    this.offer_description == input.offer_description ||
                    (this.offer_description != null &&
                    this.offer_description.Equals(input.offer_description))
                ) && 
                (
                    this.offer_code == input.offer_code ||
                    (this.offer_code != null &&
                    this.offer_code.Equals(input.offer_code))
                ) && 
                (
                    this.offer_start_time == input.offer_start_time ||
                    (this.offer_start_time != null &&
                    this.offer_start_time.Equals(input.offer_start_time))
                ) && 
                (
                    this.offer_end_time == input.offer_end_time ||
                    (this.offer_end_time != null &&
                    this.offer_end_time.Equals(input.offer_end_time))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.offer_title != null)
                {
                    hashCode = (hashCode * 59) + this.offer_title.GetHashCode();
                }
                if (this.offer_description != null)
                {
                    hashCode = (hashCode * 59) + this.offer_description.GetHashCode();
                }
                if (this.offer_code != null)
                {
                    hashCode = (hashCode * 59) + this.offer_code.GetHashCode();
                }
                if (this.offer_start_time != null)
                {
                    hashCode = (hashCode * 59) + this.offer_start_time.GetHashCode();
                }
                if (this.offer_end_time != null)
                {
                    hashCode = (hashCode * 59) + this.offer_end_time.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // offer_title (string) maxLength
            if (this.offer_title != null && this.offer_title.Length > 50)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for offer_title, length must be less than 50.", new [] { "offer_title" });
            }

            // offer_title (string) minLength
            if (this.offer_title != null && this.offer_title.Length < 3)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for offer_title, length must be greater than 3.", new [] { "offer_title" });
            }

            // offer_description (string) maxLength
            if (this.offer_description != null && this.offer_description.Length > 100)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for offer_description, length must be less than 100.", new [] { "offer_description" });
            }

            // offer_description (string) minLength
            if (this.offer_description != null && this.offer_description.Length < 3)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for offer_description, length must be greater than 3.", new [] { "offer_description" });
            }

            // offer_code (string) maxLength
            if (this.offer_code != null && this.offer_code.Length > 45)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for offer_code, length must be less than 45.", new [] { "offer_code" });
            }

            // offer_code (string) minLength
            if (this.offer_code != null && this.offer_code.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for offer_code, length must be greater than 1.", new [] { "offer_code" });
            }

            // offer_start_time (string) maxLength
            if (this.offer_start_time != null && this.offer_start_time.Length > 20)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for offer_start_time, length must be less than 20.", new [] { "offer_start_time" });
            }

            // offer_start_time (string) minLength
            if (this.offer_start_time != null && this.offer_start_time.Length < 3)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for offer_start_time, length must be greater than 3.", new [] { "offer_start_time" });
            }

            yield break;
        }
    }

}
