/*
 * Cashfree Payment Gateway APIs
 *
 * Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.
 *
 * The version of the OpenAPI document: 2025-01-01
 * Contact: developers@cashfree.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = cashfree_pg.Client.OpenAPIDateConverter;

namespace cashfree_pg.Model
{
    /// <summary>
    /// Order delivery Status associated with order.
    /// </summary>
    [DataContract(Name = "OrderDeliveryStatus")]
    public class OrderDeliveryStatus : IEquatable<OrderDeliveryStatus>, IValidatableObject
    {
        /// <summary>
        /// Delivery status of order
        /// </summary>
        /// <value>Delivery status of order</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum StatusEnum
        {
            /// <summary>
            /// Enum AWAITINGPICKUP for value: AWAITING_PICKUP
            /// </summary>
            [EnumMember(Value = "AWAITING_PICKUP")]
            AWAITINGPICKUP = 1,

            /// <summary>
            /// Enum CANCELLED for value: CANCELLED
            /// </summary>
            [EnumMember(Value = "CANCELLED")]
            CANCELLED = 2,

            /// <summary>
            /// Enum SELFFULFILLED for value: SELF_FULFILLED
            /// </summary>
            [EnumMember(Value = "SELF_FULFILLED")]
            SELFFULFILLED = 3,

            /// <summary>
            /// Enum PICKEDUP for value: PICKED_UP
            /// </summary>
            [EnumMember(Value = "PICKED_UP")]
            PICKEDUP = 4,

            /// <summary>
            /// Enum SHIPPED for value: SHIPPED
            /// </summary>
            [EnumMember(Value = "SHIPPED")]
            SHIPPED = 5,

            /// <summary>
            /// Enum INTRANSIT for value: IN_TRANSIT
            /// </summary>
            [EnumMember(Value = "IN_TRANSIT")]
            INTRANSIT = 6,

            /// <summary>
            /// Enum DELAYCOURIERCOMPANYISSUES for value: DELAY_COURIER_COMPANY_ISSUES
            /// </summary>
            [EnumMember(Value = "DELAY_COURIER_COMPANY_ISSUES")]
            DELAYCOURIERCOMPANYISSUES = 7,

            /// <summary>
            /// Enum DELAYINCORRECTADDRESS for value: DELAY_INCORRECT_ADDRESS
            /// </summary>
            [EnumMember(Value = "DELAY_INCORRECT_ADDRESS")]
            DELAYINCORRECTADDRESS = 8,

            /// <summary>
            /// Enum DELAYSELLERISSUES for value: DELAY_SELLER_ISSUES
            /// </summary>
            [EnumMember(Value = "DELAY_SELLER_ISSUES")]
            DELAYSELLERISSUES = 9,

            /// <summary>
            /// Enum REACHEDDESTINATIONHUB for value: REACHED_DESTINATION_HUB
            /// </summary>
            [EnumMember(Value = "REACHED_DESTINATION_HUB")]
            REACHEDDESTINATIONHUB = 10,

            /// <summary>
            /// Enum OUTFORDELIVERY for value: OUT_FOR_DELIVERY
            /// </summary>
            [EnumMember(Value = "OUT_FOR_DELIVERY")]
            OUTFORDELIVERY = 11,

            /// <summary>
            /// Enum DELIVERED for value: DELIVERED
            /// </summary>
            [EnumMember(Value = "DELIVERED")]
            DELIVERED = 12,

            /// <summary>
            /// Enum POTENTIALRTODELIVERYATTEMPTED for value: POTENTIAL_RTO_DELIVERY_ATTEMPTED
            /// </summary>
            [EnumMember(Value = "POTENTIAL_RTO_DELIVERY_ATTEMPTED")]
            POTENTIALRTODELIVERYATTEMPTED = 13,

            /// <summary>
            /// Enum RTO for value: RTO
            /// </summary>
            [EnumMember(Value = "RTO")]
            RTO = 14,

            /// <summary>
            /// Enum LOST for value: LOST
            /// </summary>
            [EnumMember(Value = "LOST")]
            LOST = 15,

            /// <summary>
            /// Enum DAMAGED for value: DAMAGED
            /// </summary>
            [EnumMember(Value = "DAMAGED")]
            DAMAGED = 16,

            /// <summary>
            /// Enum UNTRACKABLE404 for value: UNTRACKABLE_404
            /// </summary>
            [EnumMember(Value = "UNTRACKABLE_404")]
            UNTRACKABLE404 = 17,

            /// <summary>
            /// Enum MANUALINTERVENTIONBROKENURL for value: MANUAL_INTERVENTION_BROKEN_URL
            /// </summary>
            [EnumMember(Value = "MANUAL_INTERVENTION_BROKEN_URL")]
            MANUALINTERVENTIONBROKENURL = 18,

            /// <summary>
            /// Enum ASSOCIATEDWITHRETURNPICKUP for value: ASSOCIATED_WITH_RETURN_PICKUP
            /// </summary>
            [EnumMember(Value = "ASSOCIATED_WITH_RETURN_PICKUP")]
            ASSOCIATEDWITHRETURNPICKUP = 19,

            /// <summary>
            /// Enum UNSERVICEABLE for value: UNSERVICEABLE
            /// </summary>
            [EnumMember(Value = "UNSERVICEABLE")]
            UNSERVICEABLE = 20
        }


        /// <summary>
        /// Delivery status of order
        /// </summary>
        /// <value>Delivery status of order</value>
        /// <example>CANCELLED</example>
        [DataMember(Name = "status", IsRequired = true, EmitDefaultValue = true)]
        public StatusEnum status { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderDeliveryStatus" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected OrderDeliveryStatus() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderDeliveryStatus" /> class.
        /// </summary>
        /// <param name="status">Delivery status of order (required).</param>
        /// <param name="reason">Reason of provided order delivery status. This is optional field..</param>
        public OrderDeliveryStatus(StatusEnum status = default(StatusEnum), string? reason = default(string?))
        {
            this.status = status;
            this.reason = reason;
        }

        /// <summary>
        /// Reason of provided order delivery status. This is optional field.
        /// </summary>
        /// <value>Reason of provided order delivery status. This is optional field.</value>
        /// <example>cancelled due to wrong address</example>
        [DataMember(Name = "reason", EmitDefaultValue = false)]
        public string? reason { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderDeliveryStatus {\n");
            sb.Append("  status: ").Append(status).Append("\n");
            sb.Append("  reason: ").Append(reason).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OrderDeliveryStatus);
        }

        /// <summary>
        /// Returns true if OrderDeliveryStatus instances are equal
        /// </summary>
        /// <param name="input">Instance of OrderDeliveryStatus to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OrderDeliveryStatus input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.status == input.status ||
                    this.status.Equals(input.status)
                ) && 
                (
                    this.reason == input.reason ||
                    (this.reason != null &&
                    this.reason.Equals(input.reason))
                );
        }


        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.status.GetHashCode();
                if (this.reason != null)
                {
                    hashCode = (hashCode * 59) + this.reason.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
