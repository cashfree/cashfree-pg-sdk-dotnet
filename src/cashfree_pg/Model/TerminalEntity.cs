/*
 * Cashfree Payment Gateway APIs
 *
 * Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.
 *
 * The version of the OpenAPI document: 2023-08-01
 * Contact: developers@cashfree.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = cashfree_pg.Client.OpenAPIDateConverter;

namespace cashfree_pg.Model
{
    /// <summary>
    /// Create terminal response object
    /// </summary>
    [DataContract(Name = "TerminalEntity")]
    public class TerminalEntity : IEquatable<TerminalEntity>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TerminalEntity" /> class.
        /// </summary>
        /// <param name="addedOn">addedOn.</param>
        /// <param name="cfTerminalId">cfTerminalId.</param>
        /// <param name="lastUpdatedOn">lastUpdatedOn.</param>
        /// <param name="terminalAddress">terminalAddress.</param>
        /// <param name="terminalEmail">terminalEmail.</param>
        /// <param name="terminalType">terminalType.</param>
        /// <param name="teminalId">teminalId.</param>
        /// <param name="terminalName">terminalName.</param>
        /// <param name="terminalNote">terminalNote.</param>
        /// <param name="terminalPhoneNo">terminalPhoneNo.</param>
        /// <param name="terminalStatus">terminalStatus.</param>
        /// <param name="terminalMeta">terminalMeta.</param>
        public TerminalEntity(string addedOn = default(string), int cfTerminalId = default(int), string lastUpdatedOn = default(string), string terminalAddress = default(string), string terminalEmail = default(string), string terminalType = default(string), string teminalId = default(string), string terminalName = default(string), string terminalNote = default(string), string terminalPhoneNo = default(string), string terminalStatus = default(string), string terminalMeta = default(string))
        {
            this.added_on = addedOn;
            this.cf_terminal_id = cfTerminalId;
            this.last_updated_on = lastUpdatedOn;
            this.terminal_address = terminalAddress;
            this.terminal_email = terminalEmail;
            this.terminal_type = terminalType;
            this.teminal_id = teminalId;
            this.terminal_name = terminalName;
            this.terminal_note = terminalNote;
            this.terminal_phone_no = terminalPhoneNo;
            this.terminal_status = terminalStatus;
            this.terminal_meta = terminalMeta;
        }

        /// <summary>
        /// Gets or Sets added_on
        /// </summary>
        [DataMember(Name = "added_on", EmitDefaultValue = false)]
        public string added_on { get; set; }

        /// <summary>
        /// Gets or Sets cf_terminal_id
        /// </summary>
        [DataMember(Name = "cf_terminal_id", EmitDefaultValue = false)]
        public int cf_terminal_id { get; set; }

        /// <summary>
        /// Gets or Sets last_updated_on
        /// </summary>
        [DataMember(Name = "last_updated_on", EmitDefaultValue = false)]
        public string last_updated_on { get; set; }

        /// <summary>
        /// Gets or Sets terminal_address
        /// </summary>
        [DataMember(Name = "terminal_address", EmitDefaultValue = false)]
        public string terminal_address { get; set; }

        /// <summary>
        /// Gets or Sets terminal_email
        /// </summary>
        [DataMember(Name = "terminal_email", EmitDefaultValue = false)]
        public string terminal_email { get; set; }

        /// <summary>
        /// Gets or Sets terminal_type
        /// </summary>
        [DataMember(Name = "terminal_type", EmitDefaultValue = false)]
        public string terminal_type { get; set; }

        /// <summary>
        /// Gets or Sets teminal_id
        /// </summary>
        [DataMember(Name = "teminal_id", EmitDefaultValue = false)]
        public string teminal_id { get; set; }

        /// <summary>
        /// Gets or Sets terminal_name
        /// </summary>
        [DataMember(Name = "terminal_name", EmitDefaultValue = false)]
        public string terminal_name { get; set; }

        /// <summary>
        /// Gets or Sets terminal_note
        /// </summary>
        [DataMember(Name = "terminal_note", EmitDefaultValue = false)]
        public string terminal_note { get; set; }

        /// <summary>
        /// Gets or Sets terminal_phone_no
        /// </summary>
        [DataMember(Name = "terminal_phone_no", EmitDefaultValue = false)]
        public string terminal_phone_no { get; set; }

        /// <summary>
        /// Gets or Sets terminal_status
        /// </summary>
        [DataMember(Name = "terminal_status", EmitDefaultValue = false)]
        public string terminal_status { get; set; }

        /// <summary>
        /// Gets or Sets terminal_meta
        /// </summary>
        [DataMember(Name = "terminal_meta", EmitDefaultValue = false)]
        public string terminal_meta { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TerminalEntity {\n");
            sb.Append("  added_on: ").Append(added_on).Append("\n");
            sb.Append("  cf_terminal_id: ").Append(cf_terminal_id).Append("\n");
            sb.Append("  last_updated_on: ").Append(last_updated_on).Append("\n");
            sb.Append("  terminal_address: ").Append(terminal_address).Append("\n");
            sb.Append("  terminal_email: ").Append(terminal_email).Append("\n");
            sb.Append("  terminal_type: ").Append(terminal_type).Append("\n");
            sb.Append("  teminal_id: ").Append(teminal_id).Append("\n");
            sb.Append("  terminal_name: ").Append(terminal_name).Append("\n");
            sb.Append("  terminal_note: ").Append(terminal_note).Append("\n");
            sb.Append("  terminal_phone_no: ").Append(terminal_phone_no).Append("\n");
            sb.Append("  terminal_status: ").Append(terminal_status).Append("\n");
            sb.Append("  terminal_meta: ").Append(terminal_meta).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TerminalEntity);
        }

        /// <summary>
        /// Returns true if TerminalEntity instances are equal
        /// </summary>
        /// <param name="input">Instance of TerminalEntity to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TerminalEntity input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.added_on == input.added_on ||
                    (this.added_on != null &&
                    this.added_on.Equals(input.added_on))
                ) && 
                (
                    this.cf_terminal_id == input.cf_terminal_id ||
                    this.cf_terminal_id.Equals(input.cf_terminal_id)
                ) && 
                (
                    this.last_updated_on == input.last_updated_on ||
                    (this.last_updated_on != null &&
                    this.last_updated_on.Equals(input.last_updated_on))
                ) && 
                (
                    this.terminal_address == input.terminal_address ||
                    (this.terminal_address != null &&
                    this.terminal_address.Equals(input.terminal_address))
                ) && 
                (
                    this.terminal_email == input.terminal_email ||
                    (this.terminal_email != null &&
                    this.terminal_email.Equals(input.terminal_email))
                ) && 
                (
                    this.terminal_type == input.terminal_type ||
                    (this.terminal_type != null &&
                    this.terminal_type.Equals(input.terminal_type))
                ) && 
                (
                    this.teminal_id == input.teminal_id ||
                    (this.teminal_id != null &&
                    this.teminal_id.Equals(input.teminal_id))
                ) && 
                (
                    this.terminal_name == input.terminal_name ||
                    (this.terminal_name != null &&
                    this.terminal_name.Equals(input.terminal_name))
                ) && 
                (
                    this.terminal_note == input.terminal_note ||
                    (this.terminal_note != null &&
                    this.terminal_note.Equals(input.terminal_note))
                ) && 
                (
                    this.terminal_phone_no == input.terminal_phone_no ||
                    (this.terminal_phone_no != null &&
                    this.terminal_phone_no.Equals(input.terminal_phone_no))
                ) && 
                (
                    this.terminal_status == input.terminal_status ||
                    (this.terminal_status != null &&
                    this.terminal_status.Equals(input.terminal_status))
                ) && 
                (
                    this.terminal_meta == input.terminal_meta ||
                    (this.terminal_meta != null &&
                    this.terminal_meta.Equals(input.terminal_meta))
                );
        }

        public static Boolean checkPresenceOfKey(string jsonStringadded_on) {
            dynamic deserializedJsonString = JsonConvert.DeserializeObject<dynamic>(jsonStringadded_on);
            if (deserializedJsonString.ContainsKey("added_on")) {
                return true;
            }
            return false;
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.added_on != null)
                {
                    hashCode = (hashCode * 59) + this.added_on.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.cf_terminal_id.GetHashCode();
                if (this.last_updated_on != null)
                {
                    hashCode = (hashCode * 59) + this.last_updated_on.GetHashCode();
                }
                if (this.terminal_address != null)
                {
                    hashCode = (hashCode * 59) + this.terminal_address.GetHashCode();
                }
                if (this.terminal_email != null)
                {
                    hashCode = (hashCode * 59) + this.terminal_email.GetHashCode();
                }
                if (this.terminal_type != null)
                {
                    hashCode = (hashCode * 59) + this.terminal_type.GetHashCode();
                }
                if (this.teminal_id != null)
                {
                    hashCode = (hashCode * 59) + this.teminal_id.GetHashCode();
                }
                if (this.terminal_name != null)
                {
                    hashCode = (hashCode * 59) + this.terminal_name.GetHashCode();
                }
                if (this.terminal_note != null)
                {
                    hashCode = (hashCode * 59) + this.terminal_note.GetHashCode();
                }
                if (this.terminal_phone_no != null)
                {
                    hashCode = (hashCode * 59) + this.terminal_phone_no.GetHashCode();
                }
                if (this.terminal_status != null)
                {
                    hashCode = (hashCode * 59) + this.terminal_status.GetHashCode();
                }
                if (this.terminal_meta != null)
                {
                    hashCode = (hashCode * 59) + this.terminal_meta.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
