/*
 * Cashfree Payment Gateway APIs
 *
 * Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.
 *
 * The version of the OpenAPI document: 2025-01-01
 * Contact: developers@cashfree.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = cashfree_pg.Client.OpenAPIDateConverter;

namespace cashfree_pg.Model
{
    /// <summary>
    /// SettlementReconEntityDataInner
    /// </summary>
    [DataContract(Name = "SettlementReconEntity_data_inner")]
    public class SettlementReconEntityDataInner : IEquatable<SettlementReconEntityDataInner>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SettlementReconEntityDataInner" /> class.
        /// </summary>
        /// <param name="eventDetails">eventDetails.</param>
        /// <param name="orderDetails">orderDetails.</param>
        /// <param name="customerDetails">customerDetails.</param>
        /// <param name="paymentDetails">paymentDetails.</param>
        /// <param name="settlementDetails">settlementDetails.</param>
        /// <param name="disputeDetails">disputeDetails.</param>
        /// <param name="refundDetails">refundDetails.</param>
        public SettlementReconEntityDataInner(SettlementReconEntityDataInnerEventDetails? eventDetails = default(SettlementReconEntityDataInnerEventDetails?), SettlementReconEntityDataInnerOrderDetails? orderDetails = default(SettlementReconEntityDataInnerOrderDetails?), SettlementReconEntityDataInnerCustomerDetails? customerDetails = default(SettlementReconEntityDataInnerCustomerDetails?), SettlementReconEntityDataInnerPaymentDetails? paymentDetails = default(SettlementReconEntityDataInnerPaymentDetails?), SettlementReconEntityDataInnerSettlementDetails? settlementDetails = default(SettlementReconEntityDataInnerSettlementDetails?), SettlementReconEntityDataInnerDisputeDetails? disputeDetails = default(SettlementReconEntityDataInnerDisputeDetails?), SettlementReconEntityDataInnerRefundDetails? refundDetails = default(SettlementReconEntityDataInnerRefundDetails?))
        {
            this.event_details = eventDetails;
            this.order_details = orderDetails;
            this.customer_details = customerDetails;
            this.payment_details = paymentDetails;
            this.settlement_details = settlementDetails;
            this.dispute_details = disputeDetails;
            this.refund_details = refundDetails;
        }

        /// <summary>
        /// Gets or Sets event_details
        /// </summary>
        [DataMember(Name = "event_details", EmitDefaultValue = false)]
        public SettlementReconEntityDataInnerEventDetails? event_details { get; set; }

        /// <summary>
        /// Gets or Sets order_details
        /// </summary>
        [DataMember(Name = "order_details", EmitDefaultValue = false)]
        public SettlementReconEntityDataInnerOrderDetails? order_details { get; set; }

        /// <summary>
        /// Gets or Sets customer_details
        /// </summary>
        [DataMember(Name = "customer_details", EmitDefaultValue = false)]
        public SettlementReconEntityDataInnerCustomerDetails? customer_details { get; set; }

        /// <summary>
        /// Gets or Sets payment_details
        /// </summary>
        [DataMember(Name = "payment_details", EmitDefaultValue = false)]
        public SettlementReconEntityDataInnerPaymentDetails? payment_details { get; set; }

        /// <summary>
        /// Gets or Sets settlement_details
        /// </summary>
        [DataMember(Name = "settlement_details", EmitDefaultValue = false)]
        public SettlementReconEntityDataInnerSettlementDetails? settlement_details { get; set; }

        /// <summary>
        /// Gets or Sets dispute_details
        /// </summary>
        [DataMember(Name = "dispute_details", EmitDefaultValue = false)]
        public SettlementReconEntityDataInnerDisputeDetails? dispute_details { get; set; }

        /// <summary>
        /// Gets or Sets refund_details
        /// </summary>
        [DataMember(Name = "refund_details", EmitDefaultValue = false)]
        public SettlementReconEntityDataInnerRefundDetails? refund_details { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SettlementReconEntityDataInner {\n");
            sb.Append("  event_details: ").Append(event_details).Append("\n");
            sb.Append("  order_details: ").Append(order_details).Append("\n");
            sb.Append("  customer_details: ").Append(customer_details).Append("\n");
            sb.Append("  payment_details: ").Append(payment_details).Append("\n");
            sb.Append("  settlement_details: ").Append(settlement_details).Append("\n");
            sb.Append("  dispute_details: ").Append(dispute_details).Append("\n");
            sb.Append("  refund_details: ").Append(refund_details).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SettlementReconEntityDataInner);
        }

        /// <summary>
        /// Returns true if SettlementReconEntityDataInner instances are equal
        /// </summary>
        /// <param name="input">Instance of SettlementReconEntityDataInner to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SettlementReconEntityDataInner input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.event_details == input.event_details ||
                    (this.event_details != null &&
                    this.event_details.Equals(input.event_details))
                ) && 
                (
                    this.order_details == input.order_details ||
                    (this.order_details != null &&
                    this.order_details.Equals(input.order_details))
                ) && 
                (
                    this.customer_details == input.customer_details ||
                    (this.customer_details != null &&
                    this.customer_details.Equals(input.customer_details))
                ) && 
                (
                    this.payment_details == input.payment_details ||
                    (this.payment_details != null &&
                    this.payment_details.Equals(input.payment_details))
                ) && 
                (
                    this.settlement_details == input.settlement_details ||
                    (this.settlement_details != null &&
                    this.settlement_details.Equals(input.settlement_details))
                ) && 
                (
                    this.dispute_details == input.dispute_details ||
                    (this.dispute_details != null &&
                    this.dispute_details.Equals(input.dispute_details))
                ) && 
                (
                    this.refund_details == input.refund_details ||
                    (this.refund_details != null &&
                    this.refund_details.Equals(input.refund_details))
                );
        }

        public static Boolean checkPresenceOfKey(string jsonStringevent_details) {
            dynamic deserializedJsonString = JsonConvert.DeserializeObject<dynamic>(jsonStringevent_details);
            if (deserializedJsonString.ContainsKey("event_details")) {
                return true;
            }
            return false;
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.event_details != null)
                {
                    hashCode = (hashCode * 59) + this.event_details.GetHashCode();
                }
                if (this.order_details != null)
                {
                    hashCode = (hashCode * 59) + this.order_details.GetHashCode();
                }
                if (this.customer_details != null)
                {
                    hashCode = (hashCode * 59) + this.customer_details.GetHashCode();
                }
                if (this.payment_details != null)
                {
                    hashCode = (hashCode * 59) + this.payment_details.GetHashCode();
                }
                if (this.settlement_details != null)
                {
                    hashCode = (hashCode * 59) + this.settlement_details.GetHashCode();
                }
                if (this.dispute_details != null)
                {
                    hashCode = (hashCode * 59) + this.dispute_details.GetHashCode();
                }
                if (this.refund_details != null)
                {
                    hashCode = (hashCode * 59) + this.refund_details.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
